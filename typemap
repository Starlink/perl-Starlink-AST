TYPEMAP
AstFitsChan *	T_PTROBJ
AstObject *	T_PTROBJ
AstChannel * 	T_PTROBJ
AstFrame *	T_PTROBJ
AstCmpFrame *	T_PTROBJ
AstMapping *	T_PTROBJ
AstCmpMap *	T_PTROBJ
AstFrameSet *	T_PTROBJ
AstGrismMap *	T_PTROBJ
AstIntraMap *	T_PTROBJ
AstLutMap *	T_PTROBJ
const char *	T_PV
AstMathMap *	T_PTROBJ
AstMatrixMap *	T_PTROBJ
AstPcdMap *	T_PTROBJ
AstPermMap *	T_PTROBJ
AstPolyMap *	T_PTROBJ
AstShiftMap *	T_PTROBJ
AstSkyFrame *	T_PTROBJ
AstSlaMap *	T_PTROBJ
AstSpecFrame *	T_PTROBJ
AstSpecMap *	T_PTROBJ
AstUnitMap *	T_PTROBJ
AstWcsMap *	T_PTROBJ
AstWinMap *	T_PTROBJ
AstXmlChan *	T_PTROBJ
AstZoomMap *	T_PTROBJ
StatusType      T_STATUSINT
WcsMapType      T_WCSMAPINT


INPUT

T_STATUSINT
	if (sv_derived_from($arg, \"Starlink::AST::Status\")) {
	    $var = ($type)SvIV((SV*)SvRV($arg));
	}
	else
	    Perl_croak(aTHX_ \"$var is not of type Starlink::AST::Status\")
T_WCSMAPINT
	if (sv_derived_from($arg, \"Starlink::AST::WcsMap\")) {
	    $var = ($type)SvIV((SV*)SvRV($arg));
	}
	else
	    Perl_croak(aTHX_ \"$var is not of type Starlink::AST::WcsMap\")

OUTPUT

T_STATUSINT
	sv_setiv(newSVrv($arg,\"Starlink::AST::Status\"), (IV)$var);
T_WCSMAPINT
	sv_setiv(newSVrv($arg,\"Starlink::AST::WcsMap\"), (IV)$var);


